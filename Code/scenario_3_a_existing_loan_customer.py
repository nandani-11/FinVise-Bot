# -*- coding: utf-8 -*-
"""scenario_3_a_existing_loan_customer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qXtCivMTYJH4cPfqB1PH17cYATOAxjws
"""

import random

random.seed(42)

# Generate data for 10 customers
loan_data = {}
for i in range(1, 11):
  cust_id = f"User{i}"

  principal = random.randint(5000, 20000)
  interest_rate = random.randint(3, 10)
  tenure = random.randint(12, 84)
  paid_months = random.randint(0, tenure)

  loan_data[cust_id] = {
    "principal": principal,
    "interest_rate": interest_rate,
    "tenure": tenure,
    "paid_months": paid_months
  }

# Get customer ID input
cust_id = input("Enter User ID: ")

# Check if customer ID exists in data
if cust_id in loan_data:

  # Get data for that customer
  data = loan_data[cust_id]

  principal = data["principal"]
  interest_rate = data["interest_rate"]
  tenure = data["tenure"]
  paid_months = data["paid_months"]

  # Calculate remaining months
  remaining_months = tenure - paid_months

  # Convert interest rate to monthly
  monthly_interest_rate = interest_rate / 12 / 100

  # Calculate interest for remaining months
  interest_remaining = principal * monthly_interest_rate * remaining_months

  # Calculate total interest on original loan
  total_interest = principal * monthly_interest_rate * tenure

  # Calculate total interest already paid
  interest_paid = total_interest - interest_remaining

  # Calculate remaining principal
  principal_remaining = principal - (interest_paid)

  # Calculate remaining payment
  remaining_payment = principal_remaining + interest_remaining

  # Calculate monthly payment
  monthly_payment = remaining_payment / remaining_months

  print("Loan Details:")
  print(f"Principal: {principal}")
  print(f"Interest Rate (yearly): {interest_rate}%")
  print(f"Tenure: {tenure} months")
  print(f"Paid Months: {paid_months} months")

  print("\nRepayment Schedule:")
  print(f"Remaining Months: {remaining_months}")
  print(f"Monthly Payment: {monthly_payment}")

  # Existing code

  import matplotlib.pyplot as plt

  paid_amount = monthly_payment * paid_months
  formatted_paid = '${:.2f}'.format(paid_amount)
  formatted_pending = '${:.2f}'.format(remaining_payment)

  # Create pie chart
  plt.pie([paid_amount, remaining_payment],
          labels=[f'Paid: {formatted_paid}', f'Pending: {formatted_pending}'],
          autopct='%.2f%%')

  plt.title('Total Payment Breakdown')
  plt.show()