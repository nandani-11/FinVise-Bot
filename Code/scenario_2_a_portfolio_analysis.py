# -*- coding: utf-8 -*-
"""scenario_2_a_portfolio_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/118D_N5j2IME1FuuBWcCp8QRevkb9ZuTc
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.seed(0)

#Dictionary to store portfolio data of users
portfolios = {}

#Function to generate mock portfolio data for a user
def generate_portfolio(user_id):
    industries = ['Technology', 'Healthcare', 'Financials', 'Consumer Goods']

    portfolio_composition = {
     industry: np.random.randint(10,30) for industry in industries
    }

    total_value = sum(portfolio_composition.values())

    time_series = np.empty(12)

    last_month = total_value
    time_series[-1] = last_month

    for i in range(11):
        variation = np.random.uniform(-0.1,0.1)
        current_month = last_month * (1 + variation)
        time_series[-2-i] = current_month
        last_month = current_month

    portfolios[user_id] = {
     'Portfolio Composition': portfolio_composition,
     'Total Value': total_value,
     'Value over Time': time_series
    }

for i in range(10):
    user_id = f'User{i+1}'
    generate_portfolio(user_id)

# Ask for user ID
user_id = input("Enter your user ID: ")

# Check if user ID exists in portfolios dictionary
if user_id in portfolios:
    user_data = portfolios[user_id]

    # Display total portfolio value
    print(f"Total portfolio value for {user_id}: {user_data['Total Value']}$ \n")

    # Display portfolio composition by industry
    composition = user_data['Portfolio Composition']
    industry_names = list(composition.keys())
    industry_values = list(composition.values())

    plt.bar(industry_names, industry_values)
    plt.xlabel('Industry')
    plt.ylabel('Value')
    plt.title(f"Portfolio Composition for {user_id}")
    plt.show()

    # Display value over time
    time_series = user_data['Value over Time']
    months = range(1, len(time_series) + 1)

    plt.plot(months, time_series)
    plt.xlabel('Month')
    plt.ylabel('Value')
    plt.title(f"Portfolio Value over Time for {user_id}")
    plt.show()

else:
    print("User ID not found in portfolios.")